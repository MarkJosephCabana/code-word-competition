// <auto-generated />
using System;
using CodeWord.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeWord.API.Migrations
{
    [DbContext(typeof(CodeWordDBContext))]
    partial class CodeWordDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CodeWord.Core.Domain.Entities.Competition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("CompetitionGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionGUID")
                        .IsUnique();

                    b.ToTable("competitions", "cdwrd");
                });

            modelBuilder.Entity("CodeWord.Core.Domain.Entities.CompetitionRound", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodeWord")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<Guid>("CompetitionRoundGUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.HasIndex("CompetitionRoundGUID")
                        .IsUnique();

                    b.ToTable("competition_rounds", "cdwrd");
                });

            modelBuilder.Entity("CodeWord.Core.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompetitionRoundId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("HasOptIn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("UserGUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionRoundId");

                    b.HasIndex("UserGUID")
                        .IsUnique();

                    b.ToTable("users", "cdwrd");
                });

            modelBuilder.Entity("CodeWord.Core.Domain.Entities.Competition", b =>
                {
                    b.OwnsOne("CodeWord.Core.Domain.ValueObjects.DateRange", "CompetitionDates", b1 =>
                        {
                            b1.Property<int>("CompetitionId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("CompetitionId");

                            b1.ToTable("competitions", "cdwrd");

                            b1.WithOwner()
                                .HasForeignKey("CompetitionId");
                        });

                    b.Navigation("CompetitionDates")
                        .IsRequired();
                });

            modelBuilder.Entity("CodeWord.Core.Domain.Entities.CompetitionRound", b =>
                {
                    b.HasOne("CodeWord.Core.Domain.Entities.Competition", null)
                        .WithMany("CompetitionRounds")
                        .HasForeignKey("CompetitionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CodeWord.Core.Domain.Entities.User", b =>
                {
                    b.HasOne("CodeWord.Core.Domain.Entities.CompetitionRound", null)
                        .WithMany()
                        .HasForeignKey("CompetitionRoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CodeWord.Core.Domain.ValueObjects.Address", "HomeAddress", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .HasMaxLength(300)
                                .HasColumnType("nvarchar(300)");

                            b1.Property<string>("AddressLine2")
                                .HasMaxLength(300)
                                .HasColumnType("nvarchar(300)");

                            b1.Property<string>("PostCode")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Suburb")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.HasKey("UserId");

                            b1.ToTable("users", "cdwrd");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("HomeAddress")
                        .IsRequired();
                });

            modelBuilder.Entity("CodeWord.Core.Domain.Entities.Competition", b =>
                {
                    b.Navigation("CompetitionRounds");
                });
#pragma warning restore 612, 618
        }
    }
}
